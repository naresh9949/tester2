{"version":3,"sources":["components/SharedComponents/Loaders/Loader.js","components/SharedComponents/Breadcrumbs.js","images/pr.png","components/SharedComponents/NavBarComponents/SelectLanguage.js","components/SharedComponents/NavBarComponents/NavBar.js","components/SharedComponents/Layout.js","images/background-staging.png","images/background-qa-ind.png","images/background-qa-ukr.png","App.js","components/Utilities/themeHandler.js","index.js","components/Utilities/storageHandler.js","components/Utilities/AxiosHandler.js"],"names":["Loader","Container","align","sx","marginTop","CircularProgress","color","Typography","variant","gutterBottom","component","BreadcrumbsComponent","props","navigate","useNavigate","search","useLocation","useState","BreadCrumbs","HomeURL","breadcrumbs","setBreadcrumbs","functionId","useParams","pid","URLSearchParams","get","fname","isReffered","referrer","useEffect","a","origin","window","location","url","encodeURIComponent","toString","Get","res","data","Body","localStorage","setItem","AllowedUserRoles","show","style","padding","paddingTop","Breadcrumbs","separator","width","overflow","Button","height","onClick","startIcon","size","Link","underline","display","alignItems","href","mr","fontSize","map","breadcrumb","index","BreadCrumbURL","BreadCrumbName","SelectLanguage","lang","getItem","React","language","setLanguage","xs","sm","position","Select","id","backgroundColor","minWidth","value","onChange","event","target","reload","MenuItem","NavBar","user","useContext","UserContext","anchorEl","Id","Boolean","document","title","Fragment","AppBar","className","marginBottom","Toolbar","Avatar","alt","src","logo","IconButton","route","hash","substring","process","open","Puller","styled","Box","theme","palette","secondary","main","top","left","Layout","setOpen","setLocation","isMobile","matchMedia","matches","Grid","container","spacing","item","margin","role","Slide","direction","in","createContext","Home","lazy","App","theme1","createTheme","primary","contrastText","typography","button","textTransform","getTheme","background","qa_ind","backgroundImage","qa_indImg","zIndex","staging","stagingImg","qa_ukr","qa_ukrImg","test","getBackground","ThemeProvider","Provider","fallback","path","element","ReactDOM","render","StrictMode","getElementById","storage","setLog","storeArray","JSON","parse","itm","push","length","splice","stringify","e","name","getLogs","CreateLog","response","log_Object","header","isSuccess","status","EventID","headers","eventid","Error","date","Date","CalledUrl","err","console","log","ScreenError","error","options","withCredentials","Authorization","domains","prcc","prssvl","prutils","wms","domain","calledUrl","axios"],"mappings":"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","file":"static/js/main.6943e782.chunk.js","sourcesContent":["import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { Container } from \"@mui/material\";\nimport Typography from '@mui/material/Typography';\nfunction Loader() {\n  return (\n    <Container align=\"center\" sx={{marginTop:'3%'}}>\n      <CircularProgress color=\"secondary\" />\n      <Typography variant=\"h6\" gutterBottom component=\"div\">\n        Loading....\n      </Typography>\n    </Container>\n  );\n}\n\nexport default Loader;","import * as React from \"react\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport { useState, useEffect } from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Get } from \"./../Utilities/AxiosHandler\";\n\nexport default function BreadcrumbsComponent(props) {\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  \n  const [breadcrumbs, setBreadcrumbs] = useState({\n    BreadCrumbs: [],\n    HomeURL: \"/\",\n  });\n  let { functionId } = useParams();\n  if (!functionId) functionId = 10;\n  const pid = new URLSearchParams(search).get(\"pid\")\n    ? new URLSearchParams(search).get(\"pid\")\n    : 0;\n  const fname = new URLSearchParams(search).get(\"fname\")\n    ? new URLSearchParams(search).get(\"fname\")\n    : \"none\";\n    \n  const isReffered = new URLSearchParams(search).get(\"isReffered\")\n    ? new URLSearchParams(search).get(\"isReffered\")\n    : false;\n  const referrer = new URLSearchParams(search).get(\"referrer\")\n    ? new URLSearchParams(search).get(\"referrer\")\n    : \"none\";\n\n    \n  // object for initial rendering of component\n\n  useEffect(async () => {\n    const origin = window.location.origin;\n    let domain = \".systempr.com\";\n\n    const url =\n      \"/api/BreadCrumbsAPI/GetBreadCrumbs?originalCaller=\" +\n      encodeURIComponent(origin) +\n      \"&domain=\" +\n      domain +\n      \"&id=\" +\n      functionId.toString() +\n      \"&pid=\" +\n      pid.toString() +\n      \"&referrer=\" +\n      encodeURIComponent(referrer.toString()) +\n      \"&IsReffered=\" +\n      isReffered.toString();\n    const res = await Get(url,\"prutils\");\n    if (res.data) {\n      if(res.data.Body){\n      setBreadcrumbs(res.data.Body);\n      localStorage.setItem('AllowedUserRoles',res.data.Body.AllowedUserRoles);\n      }\n    }\n  }, [functionId]);\n\n  \n  if(!props.show)\n  return <React.Fragment></React.Fragment>\n  \n  return (\n    <div style={{ padding: 8, paddingTop: 0 }}>\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator=\"››\"\n        sx={{ width: \"100%\", overflow: \"hidden\" }}\n      >\n        <Button\n          variant=\"contained\"\n          key=\"back\"\n          sx={{height:30}}\n          color=\"warning\"\n          onClick={() => navigate(-1)}\n          startIcon={<ArrowBackIcon />}\n          size=\"small\"\n        >\n          Back\n        </Button>\n\n        <Link\n          key=\"home\"\n          underline=\"hover\"\n          sx={{ display: \"flex\", alignItems: \"center\" }}\n          color=\"#588EE7\"\n          href={breadcrumbs.HomeURL}\n        >\n          <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n          Home\n        </Link>\n\n        {breadcrumbs.BreadCrumbs.map((breadcrumb, index) =>\n          // render with links if breadcrub is not the last one else render without link field\n            <Link\n              key={breadcrumb.BreadCrumbName}\n              underline=\"hover\"\n              color=\"#588EE7\"\n              href={breadcrumb.BreadCrumbURL}\n            >\n              {breadcrumb.BreadCrumbName}\n            </Link>\n          \n        )}\n\n          <Link\n              underline=\"none\"\n              color=\"black\"\n             \n            >\n              {fname}\n            </Link>\n\n      </Breadcrumbs>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pr.107feede.png\";","import React, { useState } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nfunction SelectLanguage(props) {\n  var lang = localStorage.getItem(\"language\");\n  if (!lang) {\n    localStorage.setItem(\"language\", \"en-US\");\n    lang = \"en-US\";\n  }\n\n  const [language, setLanguage] = React.useState(lang);\n\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"language\",event.target.value);\n    window.location.reload();\n    setLanguage(event.target.value);\n  };\n\n  let display = {xs: \"block\", sm: \"flex\"};\n  if(props.position===\"nav\")\n    display = { xs: \"none\", sm: \"flex\" }\n\n  return (\n    <Select\n      id=\"language\"\n      sx={{\n        backgroundColor: \"white\",\n        minWidth: 100,\n        display: display,\n      }}\n      value={language}\n      size=\"small\"\n      onChange={handleLanguageChange}\n    >\n      <MenuItem value={\"en-US\"}>English</MenuItem>\n      <MenuItem value={\"es-MX\"}>Spanish</MenuItem>\n    </Select>\n  );\n}\n\nexport default SelectLanguage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Logscreen from \"../Logscreen\";\nimport logo from \"./../../../images/pr.png\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { UserContext } from \"../../../App.js\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport { Container } from \"@mui/material\";\nimport { Collapse } from \"react-collapse\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Slide from \"@mui/material/Slide\";\nimport SelectLanguage from './SelectLanguage';\nimport LogoutBtn from './LogoutBtn';\n\nconst MobileMenu = (props) => {\n  const theme = useTheme();\n  \n  const display = props.open ? \"block\" : \"none\";\n  return (\n    <Slide direction=\"down\" in={props.open}>\n      <Container\n        sx={{\n          backgroundColor: `${theme.palette.primary.main}`,\n          display: { display },\n        }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n           <SelectLanguage/>\n          </Grid>\n\n          <Grid item xs={8}>\n            <Typography variant=\"subtitle2\" component=\"div\">\n              Logged in as {props.user.Id} &nbsp;&nbsp;\n              <LogoutBtn />\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </Slide>\n  );\n};\n\nexport default function NavBar(props) {\n  const search = useLocation().search;\n  let user = useContext(UserContext);\n  const [language, setLanguage] = React.useState(1);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileOpen, setOpen] = React.useState(false);\n  // if user is not available set Id to error\n  if (!user) user = { Id: \"error\" };\n\n  const open = Boolean(anchorEl);\n\n  const fname = new URLSearchParams(search).get(\"fname\")\n    ? new URLSearchParams(search).get(\"fname\")\n    : \"Home\";\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLanguageChange = (event) => {\n    setLanguage(event.target.value);\n  };\n\n  const gotoHintsPage = () => {\n    var route = window.location.hash;\n    route = route.substring(1);\n    if (route == \"\") route = \"/\";\n    const url =\n      process.env.REACT_APP_PRUTILS +\n      \"/FieldHint/Index?app=svl&pagePath=\" +\n      route;\n    window.open(url, \"_blank\");\n  };\n\n  \n\n  useEffect(() => {\n    document.title = window.location.href;\n  });\n  return (\n    <React.Fragment>\n      <AppBar position=\"sticky\" className=\"navbar\" sx={{ marginBottom: 1 }}>\n        <Toolbar align=\"center\">\n          <Link underline=\"none\" href=\"/\" sx={{ mr: 0, display: \"flex\" }}>\n            <Avatar\n              alt=\"Piping Rock\"\n              sx={{ width: 36, height: 36 }}\n              src={logo}\n            />\n          </Link>\n          <IconButton id=\"fieldHintToggle\">\n            <InfoOutlinedIcon size=\"small\" />\n          </IconButton>\n\n          <IconButton onClick={gotoHintsPage}>\n            <InfoIcon size=\"small\" />\n          </IconButton>\n\n         <SelectLanguage position=\"nav\"/>\n\n          \n\n          {/* <LooksIcon color=\"primary\" size=\"small\" sx={{ position: \"fixed\", bottom: 0, right: '46%',display:{xs: \"block\", sm: \"none\" } }} /> */}\n          \n        </Toolbar>\n      </AppBar>\n     \n    </React.Fragment>\n  );\n}\n","import React, { useState,useEffect } from \"react\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport NavBar from \"./NavBarComponents/NavBar\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport { Container } from \"@mui/material\";\nimport Slide from \"@mui/material/Slide\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport Grid from \"@mui/material/Grid\";\nconst Puller = styled(Box)(({ theme }) => ({\n  position: \"absolute\",\n  color:theme.palette.secondary.main,\n  top: -28,\n  left: \"calc(50% - 25px)\",\n}));\nfunction Layout(props) {\n  const [open, setOpen] = useState(false);\n  const [location, setLocation] = useState(window.location.hash);\n  const display = props.open ? \"block\" : \"none\";\n\n  const isMobile = window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n\n  useEffect(()=>{\n    setLocation(window.location.hash);\n  },[location])\n  \n  if (!isMobile || location === \"\")\n    return (\n      <React.Fragment>\n        <NavBar user={props.user}/>\n       \n      </React.Fragment>\n    );\n\n  return (\n    <Grid container spacing={0}>\n      {!open && (\n        <Grid item xs={12}>\n          <Container align=\"center\" sx={{ padding: 0, margin: 0 }}>\n          <Puller>\n            <IconButton\n              onClick={(event) => {\n                setOpen(true);\n              }}\n              role=\"circle\"\n            >\n              <CircleIcon color=\"secondary\" sx={{ padding: 0, margin: 0, fontSize: 40}}/>\n            </IconButton>\n            </Puller>\n            <br/>\n          </Container>\n        </Grid>\n      )}\n\n      {open && (\n        <Grid item xs={12}>\n          <Slide direction=\"down\" onClick={()=>{setOpen(false)}} in={open}>\n            <div>\n              <NavBar />\n            </div>\n          </Slide>\n        </Grid>\n      )}\n      <Breadcrumbs show={open}/>\n    </Grid>\n  );\n}\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/background-staging.6c29ebeb.png\";","export default __webpack_public_path__ + \"static/media/background-qa-ind.367de2af.png\";","export default __webpack_public_path__ + \"static/media/background-qa-ukr.abeb2155.png\";","import React, { Suspense, useState, useEffect, createContext } from \"react\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Loader from \"./components/SharedComponents/Loaders/Loader\";\nimport Layout from \"./components/SharedComponents/Layout\";\nimport { Get } from \"./components/Utilities/AxiosHandler\";\nimport {getTheme,getBackground} from './components/Utilities/themeHandler';\nimport {ThemeProvider } from \"@mui/material/styles\";\n\nexport const UserContext = createContext();\n// Lazy importing the components\nconst Home = React.lazy(() => import(\"./components/Home/Home.js\"));\n\nfunction App() {\n  \n  const [title, setTitle] = useState(\"Homee\");\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const theme = getTheme();\n  const background = getBackground();\n  \n\n \n  \n  \n  return (\n    <div className=\"App\" style={background}>\n      <ThemeProvider theme={theme}>\n        <UserContext.Provider value={user}>\n          \n            <Suspense fallback={<Loader />}>\n              <HashRouter>\n                <Layout/>\n                {/* <Screen/> */}\n                <Routes>\n                  <Route path=\"/\" element={<Home />} />\n                  {/* <Route path=\"/\" element={<Home1 />} /> */}\n\n                 \n\n                 \n                </Routes>\n               \n              </HashRouter>\n            </Suspense>\n          \n        </UserContext.Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport stagingImg from \"./../../images/background-staging.png\";\nimport qa_indImg from \"./../../images/background-qa-ind.png\";\nimport qa_ukrImg from \"./../../images/background-qa-ukr.png\";\nexport const getTheme = () => {\n  // Theme for the qa-ind mode and qa-ukr\n  const theme1 = createTheme({\n    palette: {\n      primary: {\n        main: \"#e1ad01\",\n        contrastText: \"black\",\n      },\n      secondary: {\n        main: \"#e1ad01\",\n        contrastText: \"black\",\n      },\n    },\n    typography: {\n      button: {\n        textTransform: \"none\",\n      },\n    },\n  });\n\n  // Theme for the staging\n  const theme2 = createTheme({\n    palette: {\n      primary: {\n        main: \"#CCC\",\n        contrastText: \"black\",\n      },\n    },\n    typography: {\n      button: {\n        textTransform: \"none\",\n      },\n    },\n  });\n\n  // theme for the actual production\n  let theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#b0c3f4\",\n        contrastText: \"black\",\n      },\n      secondary: {\n        main: \"#42a5f5\",\n        contrastText: \"black\",\n      },\n    },\n    typography: {\n      button: {\n        textTransform: \"none\",\n      },\n    },\n  });\n\n  if (\n    process.env.REACT_APP_MODE === \"qa-ind\" ||\n    process.env.REACT_APP_MODE === \"qa-ukr\"\n  )\n    theme = theme1;\n\n  if (process.env.REACT_APP_MODE === \"staging\") theme = theme2;\n\n  if (process.env.REACT_APP_MODE === \"staging\") theme = theme2;\n\n  return theme;\n};\n\n\nexport const getBackground = ()=>{\n  // qa-ind background\n  const qa_ind = {\n    backgroundImage: `url(${qa_indImg})`,\n    height: \"100vh\",\n    zIndex: -2,\n  };\n\n  // staging background\n  const staging = { backgroundImage: `url(${stagingImg})`, height: \"100vh\" };\n\n  // qa-ukr background\n  const qa_ukr = { backgroundImage: `url(${qa_ukrImg})`, height: \"100vh\" };\n  let background = {};\n\n  // to change background based on env variable MODE\n  if (/staging/i.test(process.env.REACT_APP_MODE)) background = staging;\n  else if (/qa-ind/i.test(process.env.REACT_APP_MODE)) background = qa_ind;\n  else if (/qa-ukr/i.test(process.env.REACT_APP_MODE)) background = qa_ukr;\n\n  return background;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Screen/> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","const storage = window.localStorage;\n//{}\nconst setLog = (data) => {\n  var storeArray = [];\n  if (!storage.getItem(\"log\")) {\n    storeArray.push(data);\n    storage.setItem(\"log\", JSON.stringify(storeArray));\n  } else {\n    try {\n      JSON.parse(storage.getItem(\"log\")).map((itm) => storeArray.push(itm));\n      storeArray.push(data);\n      if (storeArray.length < 100) {\n        localStorage.setItem(\"log\", JSON.stringify(storeArray));\n      } else {\n        storeArray.splice(0, 1);\n\n        localStorage.setItem(\"log\", JSON.stringify(storeArray));\n        //console.log(arr);\n      }\n    } catch (e) {\n      if (\n        e.name === \"QuotaExceededError\" ||\n        e.name === \"QUOTA_EXCEEDED_ERR\" ||\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\"\n      ) {\n        storeArray.splice(0, 1);\n\n        localStorage.setItem(\"log\", JSON.stringify(storeArray));\n      }\n    }\n  }\n};\n\nexport const getLogs = () => {\n  var storeArray = [];\n  if (localStorage?.getItem(\"log\") !== \"\") {\n    JSON.parse(localStorage.getItem(\"log\"))?.map((itm) => storeArray.push(itm));\n  }\n  return storeArray;\n};\n\nexport const CreateLog = (response, url) => {\n  let log_Object;\n  try {\n    log_Object = {\n      header: {\n        isSuccess: response.status === 200,\n        EventID:\n          (response.headers\n            ? response.headers.eventid\n              ? response.headers.eventid\n              : \"NO EVENT ID\"\n            : \"NO HEADERS\") +\n          \"  \" +\n          url,\n        Error: response.status === 500,\n      },\n      date: new Date().toString(),\n      CalledUrl: url,\n    };\n    setLog(log_Object);\n  } catch (err) {\n    console.log(\"Create Log\", err);\n  }\n};\n\nexport const ScreenError = (url, err) => {\n  let msg = err.response\n    ? \"Event ID: \" +\n      err.response.headers.eventid +\n      \" ERROR MESSAGE : \" +\n      err.response.data.error\n    : \"Non Existent Lambda\";\n  const log_Object = {\n    header: {\n      isSuccess: false,\n      EventID: msg,\n    },\n    date: new Date().toString(),\n    CalledUrl: url,\n  };\n  setLog(log_Object);\n  \n  if(err.response && (err.response.status === 403 || err.response.headers[\"x-amzn-errortype\"]==\"AuthorizerConfigurationException\"))\n    window.location.reload();\n};\n\n\n","import axios from \"axios\";\nimport { CreateLog,ScreenError } from \"./storageHandler\";\n\nlet options = { withCredentials: true, headers: { Authorization: \"random\" } };\n\nconst domains = {\n  prcc : process.env.REACT_APP_PRCC,\n  prssvl : process.env.REACT_APP_PRSSVL,\n  prutils : process.env.REACT_APP_PRUTILS,\n  wms : process.env.REACT_APP_WMS\n}\n\n\nexport const Post = async (url, data,domain='prcc') => {\n  let response = {};\n  const calledUrl = domains[domain] + url;\n  try {\n    response = await axios.post(calledUrl, data, options);\n    CreateLog(response, calledUrl);\n  } catch (err) {\n    ScreenError(calledUrl,err);\n  }\n  return response;\n};\n\nexport const Patch = async (url, data,domain='prcc') => {\n  let response = {};\n  const calledUrl = domains[domain] + url;\n  try {\n    response = await axios.patch(calledUrl, data, options);\n    CreateLog(response, calledUrl);\n  } catch (err) {\n    ScreenError(calledUrl,err);\n  }\n  return response;\n};\n\nexport const Delete = async (url, data,domain='prcc') => {\n  let response = {};\n  const calledUrl = domains[domain] + url;\n  try {\n    response = await axios.delete(calledUrl, data, options);\n    CreateLog(response, calledUrl);\n  } catch (err) {\n    ScreenError(calledUrl,err);\n  }\n  return response;\n};\n\n\nexport const Get = async (url,domain='prcc') => { \n\n  let response = {};\n  const calledUrl = domains[domain] + url;\n  try {\n    response = await axios.get(calledUrl, options);\n    CreateLog(response,calledUrl);\n  } catch (err) {\n    ScreenError(calledUrl,err);\n  }\n  return response;\n};\n\n\nexport const GetExcel = async (exporturl) => { \n  let response = {};\n  try{\n     response = await axios({\n      method: \"get\",\n      url: exporturl,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"random\",\n      },\n      withCredentials : true\n    });\n    CreateLog(response,exporturl);\n  }catch (err) {\n    ScreenError(exporturl,err);\n    throw err;\n  }\n  return response;\n};\n\nexport const PostExcel = async (url,data) => {\n  let response = {};\n  try {\n    response = await axios({\n      method: \"post\",\n      url: url,\n      data: data,\n      headers: { \"Content-Type\": \"multipart/form-data\",Authorization: \"random\" },\n      withCredentials : true\n    });\n    CreateLog(response, url);\n  } catch (err) {\n    ScreenError(url,err);\n  }\n  return response;\n}\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}